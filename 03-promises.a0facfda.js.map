{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAa,C,SAACF,E,MAAUC,GACxBE,EAAgBC,KAAKC,SAAW,GACtC,OAAQ,IAAIC,SAAQ,CAACC,EAASC,KAC5BC,YAAW,KACLN,EACFI,EAAQL,GAERM,EAAON,QAGRD,GAvCSS,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAchB,MAAMiB,OACzC,MAAMC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDtB,EAAcsB,EAAUN,GACrBO,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MAEfJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAW,CAAIwB,SAAS,OAGhFC,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAEhBJ,EAAA0B,OAAOI,QAAQ,sBAAoB3B,QAAeC,MAAW,CAAIwB,SAAS,OAGhFV,GAASI","sources":["src/js/03-promises.js"],"sourcesContent":["// import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Notify } from 'notiflix'\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n       \n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n       \n      })\n      .catch(({ position, delay }) => {\n       \n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n       \n      });\n    delay += step;\n  }\n}\n\n\n\nfunction createPromise(position, delay) {\n  const objPromise = {position, delay}\n  const shouldResolve = Math.random() > 0.3;\n  return  new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(objPromise);\n      } else {\n        reject(objPromise);\n      }\n    });\n    }, delay)\n   \n}\n \n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","objPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.a0facfda.js.map"}